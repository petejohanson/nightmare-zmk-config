/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SPLIT_BAR 1

/ {
	chosen {
#ifdef SPLIT_BAR
		zmk,matrix_transform = &split_space_transform;
#endif
	};

        keymap {
                compatible = "zmk,keymap";

		default_layer {
// |----------------------------------------------------------------------------------------------
// |    | ESC  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |  BKSP   |
// |    | CTL   |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |    |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |  SHIFT    |  Fn  |
// |    |       |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |                |
// |----------------------------------------------------------------------------------------------
			bindings = <
&none    &gresc  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSPC
&none    &kp CLCK  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT           &kp RET
&none    &kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH    &kp RSHFT  &mo 1

#ifdef SPLIT_BAR
&none         &kp LGUI &kp LALT &none        &kp SPACE    &kp BSPC           &none           &kp RALT  &kp RGUI
#else
&none         &kp LGUI &kp LALT        &kp SPACE                     &kp RALT  &kp RGUI
#endif
			>;
		};

		rgb_layer {
// ----------------------------------------------------------------------------------------------------------------------------------
// | BT 1 |  BT CLR | N1  |  N2 |  N3 |    N4   |    N5   |    N6   |    N7   | N8  |   N9  |   N0 |   MINUS  |   EQUAL  |           |
// | BT 2 |          | F1 |  F2  | F3 |    F4   |    F5   |    F6   |     F7 |  F8 |  F9   |  F10 |  F11   |      F12                |
// | BT 2 |             |     |      |      |     |     |     |     |     |     |     |                                              |
// | BT 2 |    bootloader     |      |      |                                    | PRT SCR |       |                                 |
// ----------------------------------------------------------------------------------------------------------------------------------
			bindings = <
&bt BT_SEL 0 &bt BT_CLR &kp N1    &kp N2  &kp N3  &kp N4 &kp N5 &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS  &kp EQUAL    &trans 
&bt BT_SEL 1 &none  &kp F1  &kp F2  &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8   &kp F9   &kp F10   &kp F11        &kp F12
&bt BT_SEL 2 &bootloader   &trans    &trans    &trans   &trans          &trans          &trans          &trans          &trans   &trans   &trans                          &trans

#ifdef SPLIT_BAR
&bt BT_SEL 3       &trans &trans &trans              &trans          &trans              &trans           &trans  &trans
#else
&bt BT_SEL 3       &trans   &trans                            &trans                                      &kp PSCRN      &trans
#endif
			>;
		};
        };
};
